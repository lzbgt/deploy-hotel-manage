# hotel-statistics cluster
---
kind: Service
apiVersion: v1
metadata:
  name: hotel-statistics
  labels:
    app: hotel-statistics
spec:
  selector:
    app: hotel-statistics
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: v1
data:
  application-kube.yml: |-
    server:
      port: 80
    logging:
      config: classpath:env/prod/logback.xml      
    spring:
      application:
        name: wkxhotel-service-statistics
      datasource:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.50.134:3308/dfws_wkxhotel?useUnicode=true&characterEncoding=utf8
        username: dfws_wkxhotel
        password: dfws_wkxhotel_20180424
        initialSize: 1
        minIdle: 3
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 30000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        #useGlobalDataSourceStat: true
          
    ###########mybatis#############
    mybatis:
    config-location:
      classpath:mybatis-config.xml
    mapper-locations:
      classpath:com/wkxhotel/service/statistics/mapping/*.xml
      ###########短信消息#############
    sms: 
      sendUrl: http://sms-interface.dfwsgroup.com/rest/v1/single_sms
      signatureCode: wkx
      arrangeProject: 五颗星

    #########eureka############
    eureka:
      instance:
        preferIpAddress: true
      client:
        registerWithEureka: true
        service-url:
          defaultZone: http://admin:123456@eureka-0.eureka:80/eureka/,http://admin:123456@eureka-1.eureka:80/eureka/,http://admin:123456@eureka-2.eureka:80/eureka/

kind: ConfigMap
metadata:
  name: hotel-statisticsconfig
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: hotel-statistics
  labels:
    app: hotel-statistics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hotel-statistics
  template:
    metadata:
      labels:
        app: hotel-statistics
    spec:
      containers:
      - name: hotel-statistics
        image: docker-registry.cluster.dfwsgroup.cn/library/wkxhotel-service-statistics:1.0
        imagePullPolicy: Always
        resources:
          requests:
            memory: "300Mi"
            cpu: "250m"
          limits:
            memory: "2000Mi"
            cpu: "2000m"
        ports:
        - containerPort: 80
        volumeMounts:
        - name: hotel-statistics-config
          mountPath: /config
      volumes:
      - name: hotel-statistics-config
        configMap:
          name: hotel-statisticsconfig