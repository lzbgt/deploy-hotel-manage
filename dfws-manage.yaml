# hotel-dfws-manage cluster
---
kind: Service
apiVersion: v1
metadata:
  name: hotel-dfws-manage
  labels:
    app: hotel-dfws-manage
spec:
  selector:
    app: hotel-dfws-manage
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: v1
data:
  application-kube.yml: |-
    server:
      port: 80
      session-timeout: 1800
      tomcat:
        max-threads: 1000
        min-spare-threads: 30
      uri-encoding: utf-8
    logging:
      config: classpath:env/prod/logback.xml
    security:
      basic:
        enabled: false  
    spring:
      jackson:
        time-zone: GMT+8
        date-format: yyyy-MM-dd HH:mm:ss   
      http:
        multipart:
          max-file-size: 30Mb
          max-request-size: 30Mb
      thymeleaf:
        mode: LEGACYHTML5
        cache: false
      application:
        name: wkxhotel-dfws-manage
      datasource:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.50.134:3308/dfws_wkxhotel?useUnicode=true&characterEncoding=utf8
        username: dfws_wkxhotel
        password: dfws_wkxhotel_20180424
        initialSize: 1
        minIdle: 3
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 30000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        #useGlobalDataSourceStat: true
      redis:
          host: 192.168.50.46
          password: dfws.2017
          port: 6379
          timeout: 10000
          expire: 1800
          database: 4
          pool:
            # 连接池中的最大空闲连接
            max-idle: 8
            # 连接池中的最小空闲连接
            min-idle: 10
            # 连接池最大连接数（使用负值表示没有限制）
            max-active: 100
            # 连接池最大阻塞等待时间（使用负值表示没有限制）
            max-wait: -1
    mybatis:
      configuration:
        map-underscore-to-camel-case: true
      mapper-locations: com/wkxhotel/dfws/manage/mapper/*.xml
      typeAliasesPackage: com.wkxhotel.**.domain
    cacheType: ehcache      
          
    #########imgUrl############
    fastdfs: 
      img-url: http://s1.veimg.cn/wkxhotel/
    cdn:
      cnd-link: https://f3-wkx.veimg.cn/manage

    #########eureka############
    eureka:
          instance:
            preferIpAddress: true
          client:
            registerWithEureka: true
            service-url:
              defaultZone: http://admin:123456@eureka-0.eureka:80/eureka/,http://admin:123456@eureka-1.eureka:80/eureka/,http://admin:123456@eureka-2.eureka:80/eureka/  
kind: ConfigMap
metadata:
  name: hotel-dfws-manageconfig
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: hotel-dfws-manage
  labels:
    app: hotel-dfws-manage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hotel-dfws-manage
  template:
    metadata:
      labels:
        app: hotel-dfws-manage
    spec:
      containers:
      - name: hotel-dfws-manage
        image: docker-registry.cluster.dfwsgroup.cn/library/wkxhotel-dfws-manage:1.0
        imagePullPolicy: Always
        resources:
          requests:
            memory: "300Mi"
            cpu: "250m"
          limits:
            memory: "2000Mi"
            cpu: "2000m"
        ports:
        - containerPort: 80
        volumeMounts:
        - name: hotel-dfws-manage-config
          mountPath: /config
      volumes:
      - name: hotel-dfws-manage-config
        configMap:
          name: hotel-dfws-manageconfig
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: hotel-dfws-manage
  annotations:
    #kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
spec:
  #tls:
  #- hosts:
  #  - hotel-dfws-manage.cluster.dfwsgroup.cn
  #  secretName: hotel-dfws-manage-tls
  rules:
  - host: manage.wkxhotel.com
    http:
      paths:
      - path: /
        backend:
          serviceName: hotel-dfws-manage
          servicePort: 80
