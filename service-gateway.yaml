# hotel-gateway cluster
---
kind: Service
apiVersion: v1
metadata:
  name: hotel-gateway
  labels:
    app: hotel-gateway
spec:
  selector:
    app: hotel-gateway
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: v1
data:
  application-kube.yml: |-
    server:
      port: 80
      #ssl:
      #  key-store: classpath:keystore.p12
      #  key-store-password: tomcatadmin
      #  keyStoreType: PKCS12   
    logging:
      config: classpath:env/dev/logback.xml
    spring:
      application:
        name: wkxhotel-service-gateway
    #########ribbon############  
    ribbon:  
      ReadTimeout: 10000
      ConnectTimeout: 10000

    zuul:
      routes:
        wkxhotel-web-waiter:
          path: /**
          serviceId: wkxhotel-web-waiter
        wkxhotel-web-customer:  
          path: /**
          serviceId: wkxhotel-web-customer
    #########eureka############
    eureka:
      instance:
        preferIpAddress: true
      client:
        registerWithEureka: true
        service-url:
          defaultZone: http://admin:123456@eureka-0.eureka:80/eureka/,http://admin:123456@eureka-1.eureka:80/eureka/,http://admin:123456@eureka-2.eureka:80/eureka/

kind: ConfigMap
metadata:
  name: hotel-gatewayconfig
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: hotel-gateway
  labels:
    app: hotel-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hotel-gateway
  template:
    metadata:
      labels:
        app: hotel-gateway
    spec:
      containers:
      - name: hotel-gateway
        image: docker-registry.cluster.dfwsgroup.cn/library/wkxhotel-service-gateway:1.0
        imagePullPolicy: Always
        resources:
          requests:
            memory: "300Mi"
            cpu: "250m"
          limits:
            memory: "2000Mi"
            cpu: "2000m"
        ports:
        - containerPort: 80
        volumeMounts:
        - name: hotel-gateway-config
          mountPath: /config
      volumes:
      - name: hotel-gateway-config
        configMap:
          name: hotel-gatewayconfig
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: hotel-gateway
  annotations:
    #kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
spec:
  #tls:
  #- hosts:
  #  - hotel-waiter.cluster.dfwsgroup.cn
  #  secretName: hotel-waiter-tls
  rules:
  - host: hotel-gateway.cluster.dfwsgroup.cn
    http:
      paths:
      - path: /
        backend:
          serviceName: hotel-gateway
          servicePort: 80
