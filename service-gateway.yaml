# service-file cluster
---
kind: Service
apiVersion: v1
metadata:
  name: service-file
  labels:
    app: service-file
spec:
  selector:
    app: service-file
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: v1
data:
  application-kube.yml: |-
  server:
    port: 80
    #ssl:
    #  key-store: classpath:keystore.p12
    #  key-store-password: tomcatadmin
    #  keyStoreType: PKCS12   
  logging:
    config: classpath:env/dev/logback.xml
  
  spring:
    application:
      name: wkxhotel-service-gateway

  #########eureka############
  eureka:
    client:
      service-url:
        defaultZone: http://admin:1q2w3e4r@localhost:1115/eureka/

  #########ribbon############  
  ribbon:  
    ReadTimeout: 10000
    ConnectTimeout: 10000

  zuul:
    routes:
      wkxhotel-web-waiter:
        path: /**
        serviceId: wkxhotel-web-waiter
        
      wkxhotel-web-customer:  
        path: /**
        serviceId: wkxhotel-web-customer

    #########eureka############
    eureka:
      instance:
        preferIpAddress: true
      client:
        registerWithEureka: true
        service-url:
          defaultZone: http://admin:123456@eureka-0.eureka:80/eureka/,http://admin:123456@eureka-1.eureka:80/eureka/,http://admin:123456@eureka-2.eureka:80/eureka/

kind: ConfigMap
metadata:
  name: service-fileconfig
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: service-file
  labels:
    app: service-file
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-file
  template:
    metadata:
      labels:
        app: service-file
    spec:
      containers:
      - name: service-file
        image: docker-registry.cluster.dfwsgroup.cn/library/wkxhotel-file:1.0
        imagePullPolicy: Always
        resources:
          requests:
            memory: "300Mi"
            cpu: "250m"
          limits:
            memory: "2000Mi"
            cpu: "2000m"
        ports:
        - containerPort: 80
        volumeMounts:
        - name: service-file-config
          mountPath: /config
      volumes:
      - name: service-file-config
        configMap:
          name: service-fileconfig

